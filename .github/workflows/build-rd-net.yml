name: rd-net

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-14, ubuntu-24.04, windows-2022 ]
      fail-fast: false
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v5

    - name: dotnet.cmd cache
      uses: actions/cache@v4
      with:
        path: ${{ runner.os == 'Windows' && '~/AppData/Local/JetBrains/dotnet-cmd' || '~/.local/share/JetBrains/dotnet-cmd' }}
        key: ${{ runner.os }}-dotnet-${{ hashFiles('dotnet.cmd') }}
    - name: Set up Mono on Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install mono-devel
    - name: Restore
      run: cd rd-net && ./dotnet.cmd restore
    - name: Compile
      run: cd rd-net && ./dotnet.cmd build --configuration Release --no-restore
    - name: Tests
      run: cd rd-net && ./dotnet.cmd test --no-restore --verbosity quiet --logger trx
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: ${{ runner.os }}.test-results
        path: "**/TestResults/*"
