//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a RdGen v1.13.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using JetBrains.Annotations;

using JetBrains.Core;
using JetBrains.Diagnostics;
using JetBrains.Collections;
using JetBrains.Collections.Viewable;
using JetBrains.Lifetimes;
using JetBrains.Serialization;
using JetBrains.Rd;
using JetBrains.Rd.Base;
using JetBrains.Rd.Impl;
using JetBrains.Rd.Tasks;
using JetBrains.Rd.Util;
using JetBrains.Rd.Text;


// ReSharper disable RedundantEmptyObjectCreationArgumentList
// ReSharper disable InconsistentNaming
// ReSharper disable RedundantOverflowCheckingContext


namespace org.example
{
  
  
  /// <summary>
  /// <p>Generated from: AsyncPrimitives.kt:13</p>
  /// </summary>
  public class AsyncPrimitivesExt : RdExtBase
  {
    //fields
    //public fields
    [NotNull] public IAsyncProperty<string> AsyncProperty => _AsyncProperty;
    [NotNull] public IAsyncProperty<string> AsyncPropertyNullable => _AsyncPropertyNullable;
    [NotNull] public AsyncRdMap<int, string> AsyncMap => _AsyncMap;
    [NotNull] public AsyncRdSet<int> AsyncSet => _AsyncSet;
    
    //private fields
    [NotNull] private readonly AsyncRdProperty<string> _AsyncProperty;
    [NotNull] private readonly AsyncRdProperty<string> _AsyncPropertyNullable;
    [NotNull] private readonly AsyncRdMap<int, string> _AsyncMap;
    [NotNull] private readonly AsyncRdSet<int> _AsyncSet;
    
    //primary constructor
    private AsyncPrimitivesExt(
      [NotNull] AsyncRdProperty<string> asyncProperty,
      [NotNull] AsyncRdProperty<string> asyncPropertyNullable,
      [NotNull] AsyncRdMap<int, string> asyncMap,
      [NotNull] AsyncRdSet<int> asyncSet
    )
    {
      if (asyncProperty == null) throw new ArgumentNullException("asyncProperty");
      if (asyncPropertyNullable == null) throw new ArgumentNullException("asyncPropertyNullable");
      if (asyncMap == null) throw new ArgumentNullException("asyncMap");
      if (asyncSet == null) throw new ArgumentNullException("asyncSet");
      
      _AsyncProperty = asyncProperty;
      _AsyncPropertyNullable = asyncPropertyNullable;
      _AsyncMap = asyncMap;
      _AsyncSet = asyncSet;
      _AsyncProperty.OptimizeNested = true;
      _AsyncPropertyNullable.OptimizeNested = true;
      _AsyncMap.OptimizeNested = true;
      _AsyncSet.OptimizeNested = true;
      _AsyncPropertyNullable.ValueCanBeNull = true;
      BindableChildren.Add(new KeyValuePair<string, object>("asyncProperty", _AsyncProperty));
      BindableChildren.Add(new KeyValuePair<string, object>("asyncPropertyNullable", _AsyncPropertyNullable));
      BindableChildren.Add(new KeyValuePair<string, object>("asyncMap", _AsyncMap));
      BindableChildren.Add(new KeyValuePair<string, object>("asyncSet", _AsyncSet));
    }
    //secondary constructor
    private AsyncPrimitivesExt (
    ) : this (
      new AsyncRdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString),
      new AsyncRdProperty<string>(ReadStringNullable, WriteStringNullable),
      new AsyncRdMap<int, string>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString),
      new AsyncRdSet<int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt)
    ) {}
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<string> ReadStringNullable = JetBrains.Rd.Impl.Serializers.ReadString.NullableClass();
    
    public static  CtxWriteDelegate<string> WriteStringNullable = JetBrains.Rd.Impl.Serializers.WriteString.NullableClass();
    
    protected override long SerializationHash => -5414287245037713638L;
    
    protected override Action<ISerializers> Register => RegisterDeclaredTypesSerializers;
    public static void RegisterDeclaredTypesSerializers(ISerializers serializers)
    {
      
      serializers.RegisterToplevelOnce(typeof(AsyncPrimitivesRoot), AsyncPrimitivesRoot.RegisterDeclaredTypesSerializers);
    }
    
    public AsyncPrimitivesExt(Lifetime lifetime, IProtocol protocol) : this()
    {
      Identify(protocol.Identities, RdId.Root.Mix("AsyncPrimitivesExt"));
      this.BindTopLevel(lifetime, protocol, "AsyncPrimitivesExt");
    }
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("AsyncPrimitivesExt (");
      using (printer.IndentCookie()) {
        printer.Print("asyncProperty = "); _AsyncProperty.PrintEx(printer); printer.Println();
        printer.Print("asyncPropertyNullable = "); _AsyncPropertyNullable.PrintEx(printer); printer.Println();
        printer.Print("asyncMap = "); _AsyncMap.PrintEx(printer); printer.Println();
        printer.Print("asyncSet = "); _AsyncSet.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
}
